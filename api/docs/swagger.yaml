definitions:
  models.MovieCreate:
    properties:
      director:
        type: string
      plot:
        type: string
      title:
        type: string
      year:
        type: string
    required:
    - director
    - plot
    - title
    - year
    type: object
  models.MovieUpdate:
    properties:
      director:
        type: string
      id:
        type: integer
      plot:
        type: string
      title:
        type: string
      year:
        type: string
    required:
    - director
    - id
    - plot
    - title
    - year
    type: object
  models.Register:
    properties:
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  models.UserCreate:
    properties:
      age:
        type: integer
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - phone
    - username
    type: object
  models.UserUpdate:
    properties:
      age:
        type: integer
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    required:
    - email
    - id
    - password
    - phone
    - username
    type: object
  status_http.Response:
    properties:
      custom_message: {}
      data: {}
      description:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
  description: API for Gorm Template
  title: GromTemplate API
  version: "1.0"
paths:
  /v1/movie:
    get:
      consumes:
      - application/json
      description: Get All Movies
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Movie data
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get All Movies
      tags:
      - Movie
    post:
      consumes:
      - application/json
      description: Create Movie
      parameters:
      - description: Movie User
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/models.MovieCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Movie
      tags:
      - Movie
    put:
      consumes:
      - application/json
      description: Update Movie
      parameters:
      - description: Update Movie
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/models.MovieUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Movie data
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Movie
      tags:
      - Movie
  /v1/movie/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Movie
      parameters:
      - description: movie_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Movie
      tags:
      - Movie
    get:
      consumes:
      - application/json
      description: Get Single Movie By Id
      parameters:
      - description: movie_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Movie data
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Single Movie
      tags:
      - Movie
  /v1/register:
    post:
      consumes:
      - application/json
      description: Register user
      parameters:
      - description: Register User
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/models.Register'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Register user
      tags:
      - Auth
  /v1/user:
    get:
      consumes:
      - application/json
      description: Get All Users
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get All Users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: Create User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update User
      parameters:
      - description: Update User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update User
      tags:
      - User
  /v1/user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete User
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get Single User By Id
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/status_http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Single User
      tags:
      - User
swagger: "2.0"
